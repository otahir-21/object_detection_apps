platform :ios, '12.0'

# Disable analytics to speed up builds
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# pod 'TensorFlowLiteC'

# Define Flutter root path
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

# Import Flutter's CocoaPods helper
require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'))

# Set up Flutter iOS pods
flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static # Required for TensorFlow Lite

  # Install Flutter pods
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end


# Post-installation script to handle additional settings
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # Ensure 'EXCLUDED_ARCHS' is set for simulator builds to avoid build issues
    target.build_configurations.each do |config|
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end
end
